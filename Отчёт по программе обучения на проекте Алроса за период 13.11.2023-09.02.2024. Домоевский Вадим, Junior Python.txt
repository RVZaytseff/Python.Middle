В течении трех месяцев я решал задачи из разных областей. От рутинного написание api, до реализации не самых простых(на мой взгляд) алгоритмов. Пришлось изучить много нового, т.к фреймворк, с которым я раньше не работал, проект с большой кодовой базой и по хорошему нужно понимать что куда и как. Плюсом ко всему с алгоритмами я сталкивался по стольку по скольку и пришлось разбираться.
Если уходить от абстрактных обсуждений того что я делал, то ниже приведу список реализованного мной функционала с пояснениями:
1. Алгоритм LRU кэширования. Алгоритм с интересной реализацией в python. При его адаптации под нужды проекта(он используется для сохранения в кэш с вытеснением на "второй уровень - нереляционная база данных" информации, которая давно не запрашивалась) Очень сильно ускоряет работу, т.к он был адаптирован мной под многопоточность.
2. Алгоритм IVT - алгоритм трэкинга(проще говоря отслеживания объектов на видео). Алгоритм с откровенно кривой реализацией на python. Пришлось очень глубоко погружаться как в работу алгоритма, так и непосредственно в реализацию, чтобы он работал как нужно в проекте 
3. Затем мною было реализовано api для сохранение фотографий в карточку сотрудника. Единственное на что можно обратить внимание - это версионность(сохраненние одной фото в нескольких экземплярах), сделанная в ручную(без использования сторонных библиотек) ну и соотвественно функционал подразумевает отправку на клиент.
4. Реализовано api для добавления, изменения, удаления новых сотрудников. Тут все заурядно, ну может быть за исключением множественного редактирования сотрудников, но это так, не очень сложная задача)
5. Ну и сейчас я работаю над созданием функционала событий(нужно для мониторинга как самого приложения, так и внешних событий(нарушение тухники безопасности, несанкционированный вход-выход и пронос/провоз без накладной, , дтп))). Тут я использую такую технологию, как websocket. Крайне интересная задача, так как происходит довольно тесное взаимодействие с основными модулями приложения. И скорее всего в дальнейшем(не конкретно через этот модуль, но похожий) будет сделан модуль, который будет связывать все модули приложения, с модулем событий, а модуль событий будет связывать уже сервер и клиент.

Ну и в заключении расскажу про технологии, с которыми я не сталкивался или сталкивался очень мало:
1. Нереляционные базы данных. Никогда с ними не работал, но довольно быстро разобрался.
2. orm sqlAlchemia никогда с не работал с этой orm и не скажу, что это простой инструмент. Периодически складывается ощущение, что без неё проще, чем с ней.
3. flask framework в целом никогда не работал с ним, но тут все нативно понятно
4. Многопоточность в python. Язык, в котором на мой взгляд что многопоточность, что мультипроцессорность сделана не особо удобно, но в целом все как в других яызках
5. Библиотека opencv, библиотека numpy, pytorch. Раньше с ниим не работал. Интересные библиотеки, какие-то использовались по минимуму, а где-то приходилось сидеть и разбираться. в основном это библиотека numpy.
Там много интересных математических операций, так что что не помнил, вспомнил, а что не знал узнал. Встречались эти библиотеки когда я исправлял алгоритм IVT под нужды проека.
6. Технология websocket. С ней я немного работал, но в другом фреймворке. В принципе концепция та же, но и требуется намного больше, чем я делал ранее.
